CREATE DATABASE DB_ROBOTS

USE DB_ROBOTS

CREATE TABLE C_JUGADOR
(
   ID_JUGADOR Int NOT NULL, 
   NOMBRE_JUGADOR VarChar(30) NOT NULL, 
   AP_PAT_JUGADOR VarChar(30) NOT NULL, 
   AP_MAT_JUGADOR VarChar(30) NOT NULL, 
   EDO_BAJAL VarChar(1) NOT NULL,
   CONSTRAINT PK_ID_JUGADOR_C_JUGADOR PRIMARY KEY NONCLUSTERED (ID_JUGADOR)
)

CREATE TABLE C_ROBOT
(
   ID_ROBOT Int NOT NULL, 
   NOMBRE_ROBOT VarChar(60) NOT NULL, 
   DESCRIPCION VarChar(300) NOT NULL, 
   FEC_CREACION Date NOT NULL, 
   NOMBRE_CVE VarChar(40) NOT NULL, 
   COSTO_PROD_PESOS Float NOT NULL, 
   TIEMPO_PROD_DIAS SmallInt NOT NULL, 
   EDO_BAJAL VarChar(1) NOT NULL, 
   CONSTRAINT PK_ID_ROBOT_C_ROBOT PRIMARY KEY NONCLUSTERED (ID_ROBOT) 
)

CREATE TABLE C_MATERIA
(
   ID_MATERIA Int NOT NULL, 
   MATERIA VarChar(80) NOT NULL, 
   EDO_BAJAL VarChar(1) NOT NULL, 
   CONSTRAINT PK_ID_MATERIA_C_MATERIA PRIMARY KEY NONCLUSTERED (ID_MATERIA)
)

INSERT INTO C_MATERIA (ID_MATERIA,MATERIA,EDO_BAJAL)
VALUES (3,'CIENCIAS NATURALES','1')

CREATE TABLE C_EXAMEN_PREG_RESP
(
   ID_EXAMEN Int NOT NULL, 
   ID_MATERIA Int NOT NULL, 
   NUM_PREGUNTA Int NOT NULL, 
   NOMBRE_EXAMEN VarChar(60) NOT NULL, 
   DESCRIPCION_EXAMEN VarChar(300) NOT NULL,   
   PREGUNTA VarChar(80) NOT NULL, 
   RESPUESTA_OPC1 VarChar(40) NOT NULL, 
   RESPUESTA_OPC2 VarChar(40) NOT NULL, 
   RESPUESTA_OPC3 VarChar(40) NOT NULL, 
   RESPUESTA_CORRECTA VarChar(20) NOT NULL, 
   AVANZAR_JUGADOR VarChar(1) NOT NULL,    
   CONSTRAINT PK_ID_EXAMEN_C_PREGUNTAS_RESP PRIMARY KEY NONCLUSTERED (ID_EXAMEN, ID_MATERIA, NUM_PREGUNTA),    
   CONSTRAINT FK_ID_A_C_EX_PREG_RESP FOREIGN KEY (ID_MATERIA) REFERENCES C_MATERIA   
)

CREATE TABLE T_DETALLE_JUEGOS
(
   ID_JUGADOR Int NOT NULL, 
   ID_ROBOT Int NOT NULL, 
   ID_MATERIA Int NOT NULL, 
   ID_EXAMEN Int NOT NULL, 
   NUM_PREGUNTA Int NOT NULL, 
   RESPUESTA_JUGADOR VarChar(20) NOT NULL, 
   AVANZAR_JUGADOR VarChar(1) NOT NULL, 
   IDA Int NOT NULL, 
   FECHA_JUEGO Date NOT NULL DEFAULT GETDATE(), 
   CONSTRAINT PK_ID_JUGADOR_T_DETALLE_JUEGOS PRIMARY KEY NONCLUSTERED (ID_JUGADOR, ID_ROBOT, ID_MATERIA, ID_EXAMEN, NUM_PREGUNTA), 
   CONSTRAINT FK_IDJUG_T_DETALLE_JUEGOS FOREIGN KEY (ID_JUGADOR) REFERENCES C_JUGADOR,
   CONSTRAINT FK_IDROBOT_T_DETALLE_JUEGOS FOREIGN KEY (ID_ROBOT) REFERENCES C_ROBOT,
   CONSTRAINT FK_IDMAT_T_DETALLE_JUEGOS FOREIGN KEY (ID_EXAMEN, ID_MATERIA, NUM_PREGUNTA) REFERENCES C_EXAMEN_PREG_RESP  
)

-----agregar todo de preguntas----

CREATE PROCEDURE AGREGAR_C_EXAMEN_PREG_RESP(
   @ID_EXAMEN [Int], 
   @ID_MATERIA [Int], 
   @NUM_PREGUNTA [Int], 
   @NOMBRE_EXAMEN [VarChar] (60), 
   @DESCRIPCION_EXAMEN [VarChar] (300),   
   @PREGUNTA [VarChar] (80), 
   @RESPUESTA_OPC1 [VarChar](40), 
   @RESPUESTA_OPC2 [VarChar](40), 
   @RESPUESTA_OPC3 [VarChar](40), 
   @RESPUESTA_CORRECTA [VarChar](20), 
   @AVANZAR_JUGADOR [VarChar](1)
   )
   AS
   BEGIN
   INSERT INTO C_EXAMEN_PREG_RESP(
   
   ID_EXAMEN,  
   NUM_PREGUNTA, 
   NOMBRE_EXAMEN, 
   DESCRIPCION_EXAMEN ,   
   PREGUNTA, 
   RESPUESTA_OPC1, 
   RESPUESTA_OPC2, 
   RESPUESTA_OPC3, 
   RESPUESTA_CORRECTA, 
   AVANZAR_JUGADOR
 )

 VALUES (
	 @ID_EXAMEN,  
	   @NUM_PREGUNTA, 
	   @NOMBRE_EXAMEN, 
	   @DESCRIPCION_EXAMEN ,   
	   @PREGUNTA, 
	   @RESPUESTA_OPC1, 
	   @RESPUESTA_OPC2, 
	   @RESPUESTA_OPC3, 
	   @RESPUESTA_CORRECTA, 
	   @AVANZAR_JUGADOR
   )
   END
   SELECT  * FROM C_EXAMEN_PREG_RESP

   -------- eliminar preguntas----

   CREATE PROCEDURE ELIMINAR_C_EXAMEN_PREG_RESP(
   @PREGUNTA [VarChar] (80)
  )
   AS 
   BEGIN
   DELETE C_EXAMEN_PREG_RESP
   WHERE PREGUNTA = @PREGUNTA

   END
  
  EXEC AGREGAR_C_EXAMEN_PREG_RESP
   '1',1, '1','ordinario','preguntas','En una oracion quien realiza la accion', 'sujeto', 'verbo','predicado', 'sujeto','1'
   

  ----ACTUALIZAR PREGUNTAS Y REPUESTA---
  CREATE PROCEDURE ACT_C_EXAMEN_PREG_RESP(
  @PREGUNTA [VarChar] (80),
   @RESPUESTA_OPC1 [VarChar](40), 
   @RESPUESTA_OPC2 [VarChar](40), 
   @RESPUESTA_OPC3 [VarChar](40), 
   @RESPUESTA_CORRECTA [VarChar](20)
 
  )
  AS
  BEGIN
  UPDATE C_EXAMEN_PREG_RESP
  SET PREGUNTA = @PREGUNTA, RESPUESTA_OPC1 = @RESPUESTA_OPC1,RESPUESTA_OPC2= @RESPUESTA_OPC2,RESPUESTA_OPC3=@RESPUESTA_OPC3,RESPUESTA_CORRECTA =@RESPUESTA_CORRECTA
	WHERE PREGUNTA=@PREGUNTA
	END
	-----VISUALIZAR, SELECCIONAR LAS PREGUNTAS QUE DESEE----
	CREATE PROCEDURE VIS_C_EXAMEN_PREG_RESP(
	@SELECCION VarChar(20)
	)
	AS
	DECLARE @SELEC Varchar(20) = @SELECCION
	BEGIN
	IF (@SELEC = 'TODAS')
	BEGIN
	--C_EXAMEN_RESP.PREGUNTA
		SELECT C_EXAMEN_PREG_RESP.PREGUNTA,
	C_EXAMEN_PREG_RESP.RESPUESTA_OPC1,C_EXAMEN_PREG_RESP.RESPUESTA_OPC2,C_EXAMEN_PREG_RESP.RESPUESTA_OPC3,C_EXAMEN_PREG_RESP.RESPUESTA_CORRECTA,C_MATERIA.MATERIA
		FROM C_EXAMEN_PREG_RESP   INNER JOIN C_MATERIA ON C_EXAMEN_PREG_RESP.ID_MATERIA=C_MATERIA.ID_MATERIA 
		ORDER BY C_MATERIA.MATERIA
	END

	ELSE 
	BEGIN
	SELECT C_EXAMEN_PREG_RESP.PREGUNTA,
	C_EXAMEN_PREG_RESP.RESPUESTA_OPC1,C_EXAMEN_PREG_RESP.RESPUESTA_OPC2,C_EXAMEN_PREG_RESP.RESPUESTA_OPC3,C_EXAMEN_PREG_RESP.RESPUESTA_CORRECTA,C_MATERIA.MATERIA
		FROM C_EXAMEN_PREG_RESP   INNER JOIN C_MATERIA ON C_EXAMEN_PREG_RESP.ID_MATERIA=C_MATERIA.ID_MATERIA WHERE C_MATERIA.MATERIA=@SELECCION
		ORDER BY C_MATERIA.MATERIA
   END
   END
   EXEC VIS_C_EXAMEN_PREG_RESP 'MATEMATICAS'

   ALTER PROCEDURE MUESTRA_MATERIAS
   AS
   BEGIN
		SELECT MATERIA FROM C_MATERIA
   END
   EXEC MUESTRA_MATERIAS


   --buscar

   create procedure buscar (@pregunta [varchar] (80))
   as
   begin
   select C_EXAMEN_PREG_RESP.NUM_PREGUNTA,C_EXAMEN_PREG_RESP.NOMBRE_EXAMEN,
   C_EXAMEN_PREG_RESP.DESCRIPCION_EXAMEN,C_EXAMEN_PREG_RESP.PREGUNTA,
   C_EXAMEN_PREG_RESP.RESPUESTA_CORRECTA,C_EXAMEN_PREG_RESP.RESPUESTA_OPC1,
   C_EXAMEN_PREG_RESP.RESPUESTA_OPC2,C_EXAMEN_PREG_RESP.RESPUESTA_OPC3,
   C_EXAMEN_PREG_RESP.AVANZAR_JUGADOR,C_MATERIA.MATERIA
   from C_EXAMEN_PREG_RESP inner join C_MATERIA on C_EXAMEN_PREG_RESP.ID_MATERIA=C_MATERIA.ID_MATERIA
   where PREGUNTA=@pregunta
   end

   exec buscar '12 entre 3'